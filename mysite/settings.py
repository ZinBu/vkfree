"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""


import os

import dj_database_url
import django_heroku
import yaml


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


config_file = os.getenv(
    'SETTINGS_FILE',
    os.path.join(BASE_DIR, 'production.yml')
)
with open(config_file) as f:
    attrs = yaml.safe_load(f.read())


# Параметры для части приложения по работе с аккаунтами
TOKEN_LINK = (
    f"https://oauth.vk.com/authorize?"
    f"client_id={attrs['VK_ROOT']['ID']}"
    f"&scope={attrs['VK_ROOT']['SCOPE']}"
    f"&response_type=token&v={attrs['VK_ROOT']['VERSION']}"
)

SECRET_KEY = attrs['SECRET_KEY']
VK_SERVICE_KEY = attrs['VK_APP']['SERVICE']
DEBUG = attrs['DEBUG']

ALLOWED_HOSTS = attrs['ALLOWED_HOSTS']

# Настройки аутентификации через social_auth для VK
# При использовании PostgreSQL рекомендуется использовать встроенное поле JSONB
# для хранения извлеченных дополнительных_данных. Для social_auth
SOCIAL_AUTH_POSTGRES_JSONFIELD = True
SOCIAL_AUTH_VK_OAUTH2_KEY = attrs['VK_APP']['ID']
SOCIAL_AUTH_VK_OAUTH2_SECRET = attrs['VK_APP']['SECRET']
# Разрешаем создавать пользователей через social_auth
# SOCIAL_AUTH_CREATE_USERS = True
LOGIN_REDIRECT_URL = '/stats/welcome/'
SOCIAL_AUTH_VK_OAUTH2_SCOPE = [
    'wall',
    'friends',
    'photos',
    'video',
    'docs',
    'notes',
    'pages',
    'status',
    'groups',
    'notifications',
]

# Application definition
ROOT_URLCONF = 'mysite.urls'
WSGI_APPLICATION = 'mysite.wsgi.application'


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/
LANGUAGE_CODE = 'ru-rus'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Extra places for collectstatic to find static files.
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'stats', 'static'),
)
STATICFILES_FINDERS = (
    # для heroku
    # causes verbose duplicate notifications in django 1.9
    'django.contrib.staticfiles.finders.FileSystemFinder',
    # 'django.contrib.staticfiles.finders.AppDirectoriesFinder'
)

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'stats.apps.StatsConfig',  # неясная субстанция
    'rest_framework',
    'social_django'
]


MIDDLEWARE = [
    # Configure Django App for Heroku.
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    )
}


AUTHENTICATION_BACKENDS = (
    # бекенд авторизации через ВКонтакте
    'social_core.backends.vk.VKOAuth2',
    'django.contrib.auth.backends.ModelBackend'
)


TEMPLATE_CONTEXT_PROCESSORS = (
    'django.contrib.auth.context_processors.auth',
    'django.core.context_processors.request',
    'social_auth.context_processors.social_auth_by_name_backends',
)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['./stats/templates/'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': attrs['DATABASE']['NAME'],
        'USER': attrs['DATABASE']['USER'],
        'PASSWORD': attrs['DATABASE']['PASSWORD'],
        'HOST': attrs['DATABASE']['HOST'],
        'PORT': attrs['DATABASE']['PORT'],
    }
}


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
# Configure Django App for Heroku.
django_heroku.settings(locals())
DATABASES['default'] = dj_database_url.config(
    conn_max_age=600,
    ssl_require=True
)
